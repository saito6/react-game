{"ast":null,"code":"var _jsxFileName = \"/Users/saito/Documents/GitHub/react-game/src/components/Result.js\";\nimport React, { useContext } from 'react';\nimport AppContext from '../contexts/AppContext'; // =====================================\n\nconst Result = () => {\n  const {\n    start,\n    setStart,\n    result\n  } = useContext(AppContext);\n\n  const handleClickRule = () => {\n    setStart(0);\n  };\n\n  const handleClickStart = () => {\n    setStart(1);\n  };\n\n  var paragraph;\n\n  if (result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  } else if (result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  } else if (result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  } else if (result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  } else if (result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  } else if (result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  } // reroadした時にresultがでないように\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'start-modal' + (start === 2 ? '' : ' none') + (result === 0 ? ' hidden' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Animal game!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Result\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, result + '階層まで進めました！'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, paragraph)), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"button rule\",\n    onClick: handleClickRule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Rule\"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"button\",\n    onClick: handleClickStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Try again\"));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/saito/Documents/GitHub/react-game/src/components/Result.js"],"names":["React","useContext","AppContext","Result","start","setStart","result","handleClickRule","handleClickStart","paragraph"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB,C,CAEA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA;AAAhB,MAA0BL,UAAU,CAACC,UAAD,CAA1C;;AAEA,QAAMK,eAAe,GAAG,MAAM;AAC5BF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAFD;;AAIA,MAAII,SAAJ;;AACA,MAAGH,MAAM,KAAK,CAAd,EAAiB;AACfG,IAAAA,SAAS,GAAG,SAAZ;AACD,GAFD,MAGK,IAAGH,MAAM,KAAK,CAAd,EAAiB;AACpBG,IAAAA,SAAS,GAAG,SAAZ;AACD,GAFI,MAGA,IAAGH,MAAM,KAAK,CAAd,EAAiB;AACpBG,IAAAA,SAAS,GAAG,SAAZ;AACD,GAFI,MAGA,IAAGH,MAAM,KAAK,CAAd,EAAiB;AACpBG,IAAAA,SAAS,GAAG,SAAZ;AACD,GAFI,MAGA,IAAGH,MAAM,KAAK,CAAd,EAAiB;AACpBG,IAAAA,SAAS,GAAG,SAAZ;AACD,GAFI,MAGA,IAAGH,MAAM,KAAK,CAAd,EAAiB;AACpBG,IAAAA,SAAS,GAAG,SAAZ;AACD,GA5BkB,CA8BrB;;;AACE,sBACE;AAAK,IAAA,SAAS,EAAE,iBAAiBL,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,OAApC,KAAgDE,MAAM,KAAK,CAAX,GAAe,SAAf,GAA2B,EAA3E,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,MAAM,GAAG,YAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,SAAJ,CAHF,CAFF,eAOE;AAAG,IAAA,SAAS,EAAC,aAAb;AAA2B,IAAA,OAAO,EAAEF,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CADF;AAYD,CA3CD;;AA6CA,eAAeL,MAAf","sourcesContent":["import React,{useContext} from 'react';\nimport AppContext from '../contexts/AppContext';\n\n// =====================================\n\nconst Result = () => {\n  const {start,setStart,result} = useContext(AppContext);\n\n  const handleClickRule = () => {\n    setStart(0);\n  }\n  const handleClickStart = () => {\n    setStart(1);\n  }\n\n  var paragraph;\n  if(result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  }\n  else if(result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  }\n  else if(result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  }\n  else if(result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  }\n  else if(result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  }\n  else if(result === 1) {\n    paragraph = \"もっと頑張れ！\";\n  }\n\n// reroadした時にresultがでないように\n  return(\n    <div className={'start-modal' + (start === 2 ? '' : ' none') + (result === 0 ? ' hidden' : '')}>\n      <p className=\"title\">Animal game!</p>\n      <div className=\"content\">\n        <p className=\"head\">Result</p>\n        <p>{result + '階層まで進めました！'}</p>\n        <p>{paragraph}</p>\n      </div>\n      <a className=\"button rule\" onClick={handleClickRule}>Rule</a>\n      <a className=\"button\" onClick={handleClickStart}>Try again</a>\n    </div>\n  );\n}\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}