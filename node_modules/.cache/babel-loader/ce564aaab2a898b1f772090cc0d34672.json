{"ast":null,"code":"var _jsxFileName = \"/Users/saito/Documents/GitHub/react-game/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/reset.css';\nimport '../css/index.css';\nimport Header from './Header';\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport Start from './Start';\nimport AppContext from '../contexts/AppContext';\nimport { cardSetf } from '../function/cardSet';\nimport { answerf } from '../function/answer'; // ========================================\n\nexport var timerArray = new Array(); //外に出すことによってstateを即時反映できる\n\nconst App = () => {\n  var cardSet = cardSetf(); // TODO: カードを推すたびに呼び出されちゃってる\n\n  const initialState = {\n    cardSet: cardSet,\n    //cardの並び\n    answer: answerf(cardSet),\n    //答えの組合せ\n    userChoice: [null, null],\n    //userの選択\n    floor: 1\n  };\n  const [state, setState] = useState(initialState);\n  const [judge, setJudge] = useState(false); //正解か不正解状態\n\n  const [open, setOpen] = useState(false); //表示、非表示\n\n  const [timer, setTimer] = useState(20);\n  const [start, setStart] = useState(0);\n  let count;\n\n  const timerf = () => {\n    console.log('配列数:' + timerArray.length);\n    console.log('timer' + timer);\n    count = timer;\n    const promise = new Promise(resolve => {\n      timerArray.push(setInterval(() => {\n        console.log('配列数:' + timerArray.length);\n        count--;\n        setTimer(count);\n        console.log(count, timer);\n\n        if (count === 0) {\n          resolve();\n          console.log('配列数:' + timerArray.length);\n          const reset = setTimeout(() => {\n            //1秒後に時間切れでリセット\n            setTimer(20);\n            console.log('timer:' + timer);\n            setState({\n              cardSet: cardSet,\n              answer: answerf(cardSet),\n              userChoice: [null, null],\n              floor: 1\n            });\n            setOpen(true);\n            setTimeout(setOpen, 1000, false);\n          }, 1000);\n        }\n      }, 1000));\n    });\n    promise.then(() => {\n      console.log('clear'); //タイマーを止める\n\n      clearInterval(timerArray.shift());\n    });\n  };\n\n  useEffect( //floorを参照して変更があったときに正解不正解を識別\n  () => {\n    if (state.floor == 1) {\n      setJudge(false);\n    } else {\n      setJudge(true);\n    }\n  }, [state.floor]);\n  useEffect( //timer\n  () => {\n    if (start === 1) {\n      if (timer === 20) {\n        console.log('timerf:' + timer);\n        timerf();\n      }\n    }\n  }, [timer, start]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      state,\n      setState,\n      open,\n      setOpen,\n      judge,\n      timer,\n      setTimer,\n      start,\n      setStart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Start, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/saito/Documents/GitHub/react-game/src/components/App.js"],"names":["React","useState","useEffect","Header","Game","Info","Popup","Start","AppContext","cardSetf","answerf","timerArray","Array","App","cardSet","initialState","answer","userChoice","floor","state","setState","judge","setJudge","open","setOpen","timer","setTimer","start","setStart","count","timerf","console","log","length","promise","Promise","resolve","push","setInterval","reset","setTimeout","then","clearInterval","shift"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nimport '../css/reset.css';\nimport '../css/index.css';\n\nimport Header from './Header';\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport Start from './Start';\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\n\n// ========================================\n\nexport var timerArray = new Array();//外に出すことによってstateを即時反映できる\n\nconst App = () => {\n  var cardSet = cardSetf();// TODO: カードを推すたびに呼び出されちゃってる\n  const initialState = {\n    cardSet:cardSet,//cardの並び\n    answer:answerf(cardSet),//答えの組合せ\n    userChoice:[null,null],//userの選択\n    floor:1\n  }\nconst [state,setState] = useState(initialState);\nconst [judge,setJudge] = useState(false);//正解か不正解状態\nconst [open,setOpen] = useState(false);//表示、非表示\nconst [timer,setTimer] = useState(20);\nconst [start,setStart] = useState(0);\n\nlet count;\nconst timerf = () => {\n  console.log('配列数:'+timerArray.length);\n  console.log('timer'+timer);\n  count = timer;\n  const promise = new Promise((resolve) => {\n    timerArray.push(setInterval(() => {\n      console.log('配列数:'+timerArray.length);\n      count--;\n      setTimer(count);\n      console.log(count,timer);\n      if(count === 0) {\n        resolve();\n        console.log('配列数:'+timerArray.length);\n        const reset = setTimeout(() => {//1秒後に時間切れでリセット\n          setTimer(20);\n          console.log('timer:'+timer);\n          setState({\n            cardSet:cardSet,\n            answer:answerf(cardSet),\n            userChoice:[null,null],\n            floor:1\n          });\n          setOpen(true);\n          setTimeout(setOpen,1000,false);\n        }, 1000);\n      }\n    }, 1000));\n  });\n  promise.then(() => {\n    console.log('clear');\n    //タイマーを止める\n    clearInterval(timerArray.shift());\n  });\n}\n  useEffect(//floorを参照して変更があったときに正解不正解を識別\n    () => {\n      if(state.floor == 1){\n        setJudge(false);\n      }\n      else{\n        setJudge(true);\n      }\n    },\n    [state.floor]\n  );\n\n  useEffect(//timer\n    () => {\n      if(start === 1) {\n        if(timer === 20){\n          console.log('timerf:'+timer);\n          timerf();\n        }\n      }\n    },[timer,start]\n  );\n\n  return(\n    <AppContext.Provider value={{state,setState,open,setOpen,judge,timer,setTimer,start,setStart}}>\n    <Start />\n    <Header />\n    <div className=\"game\">\n      <div className=\"inner\">\n        <Game />\n        <Info />\n        <Popup />\n      </div>\n    </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}