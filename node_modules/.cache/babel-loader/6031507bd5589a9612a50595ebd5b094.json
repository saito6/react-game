{"ast":null,"code":"import React,{useContext}from'react';import Timer from'./Timer';import AppContext from'../contexts/AppContext';import{cardSetf}from'../function/cardSet';import{answerf}from'../function/answer';import{timerArray}from'./App';// ========================================\nvar Info=function Info(){var _useContext=useContext(AppContext),state=_useContext.state,setState=_useContext.setState,setOpen=_useContext.setOpen,setTimer=_useContext.setTimer,setStart=_useContext.setStart,setResult=_useContext.setResult;var handleClickAnswer=function handleClickAnswer(){setOpen(true);clearInterval(timerArray.shift());setTimer(20);setTimeout(setOpen,1000,false);var cardSet=cardSetf();if(state.answer[0]+state.answer[1]===state.userChoice[0]+state.userChoice[1]&&state.answer[0]*state.answer[1]===state.userChoice[0]*state.userChoice[1]){//正解したとき\nsetState({cardSet:cardSet,answer:answerf(cardSet),userChoice:[null,null],floor:state.floor+1});}else{//不正解のとき\nsetStart(2);setResult(state.floor);setState({cardSet:cardSet,answer:answerf(cardSet),userChoice:[null,null],floor:1});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(Timer,null),/*#__PURE__*/React.createElement(\"div\",{className:\"submit-area\"},/*#__PURE__*/React.createElement(\"button\",{className:state.userChoice[0]===null||state.userChoice[1]===null?'disabled':'active',disabled:state.userChoice[0]===null||state.userChoice[1]===null,onClick:handleClickAnswer},\"\\u6C7A\\u5B9A\")),/*#__PURE__*/React.createElement(\"div\",{className:\"floor-area\"},/*#__PURE__*/React.createElement(\"p\",null,state.floor,\"\\u968E\\u5C64\")));};export default Info;","map":{"version":3,"sources":["/Users/saito/Documents/GitHub/react-game/src/components/Info.js"],"names":["React","useContext","Timer","AppContext","cardSetf","answerf","timerArray","Info","state","setState","setOpen","setTimer","setStart","setResult","handleClickAnswer","clearInterval","shift","setTimeout","cardSet","answer","userChoice","floor"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,UAAd,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CAEA,OAAQC,QAAR,KAAuB,qBAAvB,CACA,OAAQC,OAAR,KAAsB,oBAAtB,CACA,OAAQC,UAAR,KAAyB,OAAzB,CACA;AAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,iBAE4CN,UAAU,CAACE,UAAD,CAFtD,CAEVK,KAFU,aAEVA,KAFU,CAEJC,QAFI,aAEJA,QAFI,CAEKC,OAFL,aAEKA,OAFL,CAEaC,QAFb,aAEaA,QAFb,CAEsBC,QAFtB,aAEsBA,QAFtB,CAE+BC,SAF/B,aAE+BA,SAF/B,CAIjB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BJ,OAAO,CAAC,IAAD,CAAP,CACAK,aAAa,CAACT,UAAU,CAACU,KAAX,EAAD,CAAb,CACAL,QAAQ,CAAC,EAAD,CAAR,CACAM,UAAU,CAACP,OAAD,CAAS,IAAT,CAAc,KAAd,CAAV,CACA,GAAIQ,CAAAA,OAAO,CAAGd,QAAQ,EAAtB,CACA,GAAGI,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBX,KAAK,CAACW,MAAN,CAAa,CAAb,CAAhB,GAAoCX,KAAK,CAACY,UAAN,CAAiB,CAAjB,EAAoBZ,KAAK,CAACY,UAAN,CAAiB,CAAjB,CAAxD,EAA+EZ,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBX,KAAK,CAACW,MAAN,CAAa,CAAb,CAAhB,GAAoCX,KAAK,CAACY,UAAN,CAAiB,CAAjB,EAAoBZ,KAAK,CAACY,UAAN,CAAiB,CAAjB,CAA1I,CAA8J,CAAC;AAC7JX,QAAQ,CAAC,CACPS,OAAO,CAACA,OADD,CAEPC,MAAM,CAACd,OAAO,CAACa,OAAD,CAFP,CAGPE,UAAU,CAAC,CAAC,IAAD,CAAM,IAAN,CAHJ,CAIPC,KAAK,CAACb,KAAK,CAACa,KAAN,CAAY,CAJX,CAAD,CAAR,CAMD,CAPD,IAQI,CAAC;AACHT,QAAQ,CAAC,CAAD,CAAR,CACAC,SAAS,CAACL,KAAK,CAACa,KAAP,CAAT,CACAZ,QAAQ,CAAC,CACPS,OAAO,CAACA,OADD,CAEPC,MAAM,CAACd,OAAO,CAACa,OAAD,CAFP,CAGPE,UAAU,CAAC,CAAC,IAAD,CAAM,IAAN,CAHJ,CAIPC,KAAK,CAAC,CAJC,CAAD,CAAR,CAMD,CACF,CAxBD,CAyBA,mBACE,2BAAK,SAAS,CAAC,WAAf,eAME,oBAAC,KAAD,MANF,cAOE,2BAAK,SAAS,CAAC,aAAf,eACE,8BAAQ,SAAS,CAAEb,KAAK,CAACY,UAAN,CAAiB,CAAjB,IAAwB,IAAxB,EAAgCZ,KAAK,CAACY,UAAN,CAAiB,CAAjB,IAAwB,IAAxD,CAA+D,UAA/D,CAA4E,QAA/F,CAA0G,QAAQ,CAAEZ,KAAK,CAACY,UAAN,CAAiB,CAAjB,IAAwB,IAAxB,EAAgCZ,KAAK,CAACY,UAAN,CAAiB,CAAjB,IAAwB,IAA5K,CAAkL,OAAO,CAAEN,iBAA3L,iBADF,CAPF,cAUE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAIN,KAAK,CAACa,KAAV,gBADF,CAVF,CADF,CAgBD,CA7CD,CA+CA,cAAed,CAAAA,IAAf","sourcesContent":["import React,{useContext} from 'react';\n\nimport Timer from './Timer';\n\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\nimport {timerArray} from './App';\n// ========================================\n\nconst Info = () => {\n\n  const {state,setState,setOpen,setTimer,setStart,setResult} = useContext(AppContext);\n\n  const handleClickAnswer = () => {\n    setOpen(true);\n    clearInterval(timerArray.shift());\n    setTimer(20);\n    setTimeout(setOpen,1000,false);\n    var cardSet = cardSetf();\n    if(state.answer[0]+state.answer[1] === state.userChoice[0]+state.userChoice[1] && state.answer[0]*state.answer[1] === state.userChoice[0]*state.userChoice[1]){//正解したとき\n      setState({\n        cardSet:cardSet,\n        answer:answerf(cardSet),\n        userChoice:[null,null],\n        floor:state.floor+1\n      });\n    }\n    else{//不正解のとき\n      setStart(2);\n      setResult(state.floor);\n      setState({\n        cardSet:cardSet,\n        answer:answerf(cardSet),\n        userChoice:[null,null],\n        floor:1\n      });\n    }\n  }\n  return(\n    <div className=\"game-info\">\n   {/*<div className=\"answer\">\n        <p className=\"answer_head\">答えはこちら</p>\n        <p><span className=\"ans_num\">{state.answer[0]+1}</span>と<span className=\"ans_num\">{state.answer[1]+1}</span>\n        </p>\n      </div>*/}\n      <Timer />\n      <div className=\"submit-area\">\n        <button className={state.userChoice[0] === null || state.userChoice[1] === null ? 'disabled' : 'active' } disabled={state.userChoice[0] === null || state.userChoice[1] === null} onClick={handleClickAnswer}>決定</button>\n      </div>\n      <div className=\"floor-area\">\n        <p>{state.floor}階層</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}