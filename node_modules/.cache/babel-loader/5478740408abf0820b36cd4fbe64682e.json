{"ast":null,"code":"var _jsxFileName = \"/Users/saito/Documents/GitHub/react-game/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/reset.css';\nimport '../css/index.css';\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport AppContext from '../contexts/AppContext';\nimport { cardSetf } from '../function/cardSet';\nimport { answerf } from '../function/answer'; // ========================================\n\nconst App = () => {\n  var cardSet = cardSetf(); // TODO: カードを推すたびに呼び出されちゃってる\n\n  const initialState = {\n    cardSet: cardSet,\n    //cardの並び\n    answer: answerf(cardSet),\n    //答えの組合せ\n    userChoice: [null, null],\n    //userの選択\n    floor: 1\n  };\n  const [state, setState] = useState(initialState);\n  const [judge, setJudge] = useState(false); //正解か不正解状態\n\n  const [open, setOpen] = useState(false); //表示、非表示\n\n  const [timer, setTimer] = useState(10);\n  var timerArray = new Array(); // var interval;\n\n  let count;\n\n  const timerf = () => {\n    const promise = new Promise(resolve => {\n      console.log('配列数:' + timerArray.length);\n      console.log('aiueo');\n      console.log('timer' + timer); //なぜかnullが入っている\n      // clearInterval(timerArray.shift());\n\n      console.log('配列数:' + timerArray.length); //0\n\n      count = 10;\n      timerArray.push(setInterval(() => {\n        console.log('配列数:' + timerArray.length); //1\n\n        count--;\n        setTimer(count);\n        console.log(count, timer);\n\n        if (count === 0) {\n          // resolve();\n          console.log('配列数:' + timerArray.length);\n          console.log('配列数:' + timerArray.length);\n          const reset = setTimeout(() => {\n            //1秒後に時間切れでリセット\n            setTimer(10);\n            console.log('aaa');\n            console.log('timer:' + timer);\n            setState({\n              cardSet: cardSet,\n              answer: answerf(cardSet),\n              userChoice: [null, null],\n              floor: 1\n            });\n            setOpen(true);\n            setTimeout(setOpen, 1000, false);\n          }, 1000);\n        }\n      }, 1000));\n    });\n    promise.then(() => {\n      console.log('sawada'); //タイマーを止める\n\n      clearInterval(timerArray.shift());\n    }); // clearInterval(interval);\n  };\n\n  useEffect( //floorを参照して変更があったときに正解不正解を識別\n  () => {\n    if (state.floor == 1) {\n      setJudge(false);\n    } else {\n      setJudge(true);\n    } // else if (open === true) {\n    //   // timerf();\n    // }\n\n  }, [state.floor]);\n  useEffect( //timer\n  () => {\n    if (timer === 10) {\n      timerf();\n    }\n  }, [timer]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      state,\n      setState,\n      open,\n      setOpen,\n      judge,\n      timer,\n      setTimer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/saito/Documents/GitHub/react-game/src/components/App.js"],"names":["React","useState","useEffect","Game","Info","Popup","AppContext","cardSetf","answerf","App","cardSet","initialState","answer","userChoice","floor","state","setState","judge","setJudge","open","setOpen","timer","setTimer","timerArray","Array","count","timerf","promise","Promise","resolve","console","log","length","push","setInterval","reset","setTimeout","then","clearInterval","shift"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAO,kBAAP;AACA,OAAO,kBAAP;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,OAAR,QAAsB,oBAAtB,C,CAEA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,MAAIC,OAAO,GAAGH,QAAQ,EAAtB,CADgB,CACS;;AACzB,QAAMI,YAAY,GAAG;AACnBD,IAAAA,OAAO,EAACA,OADW;AACH;AAChBE,IAAAA,MAAM,EAACJ,OAAO,CAACE,OAAD,CAFK;AAEK;AACxBG,IAAAA,UAAU,EAAC,CAAC,IAAD,EAAM,IAAN,CAHQ;AAGI;AACvBC,IAAAA,KAAK,EAAC;AAJa,GAArB;AAMF,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBf,QAAQ,CAACU,YAAD,CAAjC;AACA,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBjB,QAAQ,CAAC,KAAD,CAAjC,CATkB,CASuB;;AACzC,QAAM,CAACkB,IAAD,EAAMC,OAAN,IAAiBnB,QAAQ,CAAC,KAAD,CAA/B,CAVkB,CAUqB;;AACvC,QAAM,CAACoB,KAAD,EAAOC,QAAP,IAAmBrB,QAAQ,CAAC,EAAD,CAAjC;AAEA,MAAIsB,UAAU,GAAG,IAAIC,KAAJ,EAAjB,CAbkB,CAclB;;AACA,MAAIC,KAAJ;;AACA,QAAMC,MAAM,GAAG,MAAM;AACnB,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAOR,UAAU,CAACS,MAA9B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAQV,KAApB,EAHuC,CAGZ;AAC3B;;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAOR,UAAU,CAACS,MAA9B,EALuC,CAKD;;AACtCP,MAAAA,KAAK,GAAG,EAAR;AACAF,MAAAA,UAAU,CAACU,IAAX,CAAgBC,WAAW,CAAC,MAAM;AAChCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAOR,UAAU,CAACS,MAA9B,EADgC,CACM;;AACtCP,QAAAA,KAAK;AACLH,QAAAA,QAAQ,CAACG,KAAD,CAAR;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAkBJ,KAAlB;;AACA,YAAGI,KAAK,KAAK,CAAb,EAAgB;AACd;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAOR,UAAU,CAACS,MAA9B;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAOR,UAAU,CAACS,MAA9B;AACA,gBAAMG,KAAK,GAAGC,UAAU,CAAC,MAAM;AAAC;AAC9Bd,YAAAA,QAAQ,CAAC,EAAD,CAAR;AACAQ,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY,WAASV,KAArB;AACAL,YAAAA,QAAQ,CAAC;AACPN,cAAAA,OAAO,EAACA,OADD;AAEPE,cAAAA,MAAM,EAACJ,OAAO,CAACE,OAAD,CAFP;AAGPG,cAAAA,UAAU,EAAC,CAAC,IAAD,EAAM,IAAN,CAHJ;AAIPC,cAAAA,KAAK,EAAC;AAJC,aAAD,CAAR;AAMAM,YAAAA,OAAO,CAAC,IAAD,CAAP;AACAgB,YAAAA,UAAU,CAAChB,OAAD,EAAS,IAAT,EAAc,KAAd,CAAV;AACD,WAZuB,EAYrB,IAZqB,CAAxB;AAaD;AACF,OAvB0B,EAuBxB,IAvBwB,CAA3B;AAwBD,KA/Be,CAAhB;AAgCAO,IAAAA,OAAO,CAACU,IAAR,CAAa,MAAM;AACjBP,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADiB,CAEjB;;AACAO,MAAAA,aAAa,CAACf,UAAU,CAACgB,KAAX,EAAD,CAAb;AACD,KAJD,EAjCmB,CAsCjB;AACH,GAvCD;;AAwCErC,EAAAA,SAAS,EAAC;AACR,QAAM;AACJ,QAAGa,KAAK,CAACD,KAAN,IAAe,CAAlB,EAAoB;AAClBI,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAFD,MAGI;AACFA,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KANG,CAOJ;AACA;AACA;;AACD,GAXM,EAYP,CAACH,KAAK,CAACD,KAAP,CAZO,CAAT;AAeAZ,EAAAA,SAAS,EAAC;AACR,QAAM;AACJ,QAAGmB,KAAK,KAAK,EAAb,EAAgB;AACdK,MAAAA,MAAM;AACP;AACF,GALM,EAKL,CAACL,KAAD,CALK,CAAT;AAQA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACN,MAAAA,KAAD;AAAOC,MAAAA,QAAP;AAAgBG,MAAAA,IAAhB;AAAqBC,MAAAA,OAArB;AAA6BH,MAAAA,KAA7B;AAAmCI,MAAAA,KAAnC;AAAyCC,MAAAA;AAAzC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADA,CADF;AAWD,CA1FD;;AA4FA,eAAeb,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nimport '../css/reset.css';\nimport '../css/index.css';\n\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\n\n// ========================================\n\nconst App = () => {\n  var cardSet = cardSetf();// TODO: カードを推すたびに呼び出されちゃってる\n  const initialState = {\n    cardSet:cardSet,//cardの並び\n    answer:answerf(cardSet),//答えの組合せ\n    userChoice:[null,null],//userの選択\n    floor:1\n  }\nconst [state,setState] = useState(initialState);\nconst [judge,setJudge] = useState(false);//正解か不正解状態\nconst [open,setOpen] = useState(false);//表示、非表示\nconst [timer,setTimer] = useState(10);\n\nvar timerArray = new Array();\n// var interval;\nlet count;\nconst timerf = () => {\n  const promise = new Promise((resolve) => {\n    console.log('配列数:'+timerArray.length);\n    console.log('aiueo');\n    console.log('timer'+timer);//なぜかnullが入っている\n    // clearInterval(timerArray.shift());\n    console.log('配列数:'+timerArray.length);//0\n    count = 10;\n    timerArray.push(setInterval(() => {\n      console.log('配列数:'+timerArray.length);//1\n      count--;\n      setTimer(count);\n      console.log(count,timer);\n      if(count === 0) {\n        // resolve();\n        console.log('配列数:'+timerArray.length);\n        console.log('配列数:'+timerArray.length);\n        const reset = setTimeout(() => {//1秒後に時間切れでリセット\n          setTimer(10);\n          console.log('aaa');\n          console.log('timer:'+timer);\n          setState({\n            cardSet:cardSet,\n            answer:answerf(cardSet),\n            userChoice:[null,null],\n            floor:1\n          });\n          setOpen(true);\n          setTimeout(setOpen,1000,false);\n        }, 1000);\n      }\n    }, 1000));\n  });\n  promise.then(() => {\n    console.log('sawada');\n    //タイマーを止める\n    clearInterval(timerArray.shift());\n  });\n    // clearInterval(interval);\n}\n  useEffect(//floorを参照して変更があったときに正解不正解を識別\n    () => {\n      if(state.floor == 1){\n        setJudge(false);\n      }\n      else{\n        setJudge(true);\n      }\n      // else if (open === true) {\n      //   // timerf();\n      // }\n    },\n    [state.floor]\n  );\n\n  useEffect(//timer\n    () => {\n      if(timer === 10){\n        timerf();\n      }\n    },[timer]\n  );\n\n  return(\n    <AppContext.Provider value={{state,setState,open,setOpen,judge,timer,setTimer}}>\n    <div className=\"game\">\n      <div className=\"inner\">\n        <Game />\n        <Info />\n        <Popup />\n      </div>\n    </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}