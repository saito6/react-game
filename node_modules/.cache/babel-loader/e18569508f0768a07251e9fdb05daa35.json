{"ast":null,"code":"import _slicedToArray from\"/Users/saito/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'../css/reset.css';import'../css/index.css';import Header from'./Header';import Game from'./Game';import Info from'./Info';import Popup from'./Popup';import Start from'./Start';import Result from'./Result';import AppContext from'../contexts/AppContext';import{cardSetf}from'../function/cardSet';import{answerf}from'../function/answer';// ========================================\nexport var timerArray=new Array();//外に出すことによってstateを即時反映できる\nvar App=function App(){var cardSet=cardSetf();// TODO: カードを推すたびに呼び出されちゃってる\nvar initialState={cardSet:cardSet,//cardの並び\nanswer:answerf(cardSet),//答えの組合せ\nuserChoice:[null,null],//userの選択\nfloor:1};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),judge=_useState4[0],setJudge=_useState4[1];//正解か不正解状態\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),open=_useState6[0],setOpen=_useState6[1];//表示、非表示\nvar _useState7=useState(20),_useState8=_slicedToArray(_useState7,2),timer=_useState8[0],setTimer=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),start=_useState10[0],setStart=_useState10[1];//0の時start-modal表示、1の時ゲーム中、2の時result画面表示\nvar _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),result=_useState12[0],setResult=_useState12[1];var count;var timerf=function timerf(){console.log('配列数:'+timerArray.length);console.log('timer'+timer);count=timer;var promise=new Promise(function(resolve){timerArray.push(setInterval(function(){console.log('配列数:'+timerArray.length);count--;setTimer(count);console.log(count,timer);if(count===0){resolve();console.log('配列数:'+timerArray.length);setStart(2);setTimer(20);setResult(state.floor);console.log('timer:'+timer);setState({cardSet:cardSet,answer:answerf(cardSet),userChoice:[null,null],floor:1});setOpen(true);setTimeout(setOpen,1000,false);}},1000));});promise.then(function(){console.log('clear');//タイマーを止める\nclearInterval(timerArray.shift());});};useEffect(//floorを参照して変更があったときに正解不正解を識別\nfunction(){if(state.floor===1){setJudge(false);}else{setJudge(true);}},[state.floor]);useEffect(//timer\nfunction(){if(start===1){if(timer===20){console.log('timerf:'+timer);timerf();}}},[timer,start]);return/*#__PURE__*/React.createElement(AppContext.Provider,{value:{state:state,setState:setState,open:open,setOpen:setOpen,judge:judge,timer:timer,setTimer:setTimer,start:start,setStart:setStart,result:result,setResult:setResult}},/*#__PURE__*/React.createElement(Start,null),/*#__PURE__*/React.createElement(Result,null),/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"inner\"},/*#__PURE__*/React.createElement(Game,null),/*#__PURE__*/React.createElement(Info,null),/*#__PURE__*/React.createElement(Popup,null))));};export default App;","map":{"version":3,"sources":["/Users/saito/Documents/GitHub/react-game/src/components/App.js"],"names":["React","useState","useEffect","Header","Game","Info","Popup","Start","Result","AppContext","cardSetf","answerf","timerArray","Array","App","cardSet","initialState","answer","userChoice","floor","state","setState","judge","setJudge","open","setOpen","timer","setTimer","start","setStart","result","setResult","count","timerf","console","log","length","promise","Promise","resolve","push","setInterval","setTimeout","then","clearInterval","shift"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nimport '../css/reset.css';\nimport '../css/index.css';\n\nimport Header from './Header';\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport Start from './Start';\nimport Result from './Result';\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\n\n// ========================================\n\nexport var timerArray = new Array();//外に出すことによってstateを即時反映できる\n\nconst App = () => {\n  var cardSet = cardSetf();// TODO: カードを推すたびに呼び出されちゃってる\n  const initialState = {\n    cardSet:cardSet,//cardの並び\n    answer:answerf(cardSet),//答えの組合せ\n    userChoice:[null,null],//userの選択\n    floor:1\n  }\nconst [state,setState] = useState(initialState);\nconst [judge,setJudge] = useState(false);//正解か不正解状態\nconst [open,setOpen] = useState(false);//表示、非表示\nconst [timer,setTimer] = useState(20);\nconst [start,setStart] = useState(0);//0の時start-modal表示、1の時ゲーム中、2の時result画面表示\nconst [result,setResult] = useState(0);\n\nlet count;\nconst timerf = () => {\n  console.log('配列数:'+timerArray.length);\n  console.log('timer'+timer);\n  count = timer;\n  const promise = new Promise((resolve) => {\n    timerArray.push(setInterval(() => {\n      console.log('配列数:'+timerArray.length);\n      count--;\n      setTimer(count);\n      console.log(count,timer);\n      if(count === 0) {\n        resolve();\n        console.log('配列数:'+timerArray.length);\n          setStart(2);\n          setTimer(20);\n          setResult(state.floor);\n          console.log('timer:'+timer);\n          setState({\n            cardSet:cardSet,\n            answer:answerf(cardSet),\n            userChoice:[null,null],\n            floor:1\n          });\n          setOpen(true);\n          setTimeout(setOpen,1000,false);\n      }\n    }, 1000));\n  });\n  promise.then(() => {\n    console.log('clear');\n    //タイマーを止める\n    clearInterval(timerArray.shift());\n  });\n}\n  useEffect(//floorを参照して変更があったときに正解不正解を識別\n    () => {\n      if(state.floor === 1){\n        setJudge(false);\n      }\n      else{\n        setJudge(true);\n      }\n    },\n    [state.floor]\n  );\n\n  useEffect(//timer\n    () => {\n      if(start === 1) {\n        if(timer === 20){\n          console.log('timerf:'+timer);\n          timerf();\n        }\n      }\n    },[timer,start]\n  );\n\n  return(\n    <AppContext.Provider value={{state,setState,open,setOpen,judge,timer,setTimer,start,setStart,result,setResult}}>\n    <Start />\n    <Result />\n    <Header />\n    <div className=\"game\">\n      <div className=\"inner\">\n        <Game />\n        <Info />\n        <Popup />\n      </div>\n    </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}