{"ast":null,"code":"var _jsxFileName = \"/Users/saito/Documents/GitHub/react-game/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/reset.css';\nimport '../css/index.css';\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport AppContext from '../contexts/AppContext';\nimport { cardSetf } from '../function/cardSet';\nimport { answerf } from '../function/answer'; // ========================================\n\nconst App = () => {\n  var cardSet = cardSetf(); // TODO: カードを推すたびに呼び出されちゃってる\n\n  const initialState = {\n    cardSet: cardSet,\n    //cardの並び\n    answer: answerf(cardSet),\n    //答えの組合せ\n    userChoice: [null, null],\n    //userの選択\n    floor: 1\n  };\n  const [state, setState] = useState(initialState);\n  const [judge, setJudge] = useState(false); //正解か不正解状態\n\n  const [open, setOpen] = useState(false); //表示、非表示\n\n  const [timer, setTimer] = useState(10);\n  var timerArray = new Array(); // var interval;\n\n  let count;\n\n  const timerf = () => {\n    clearInterval(timerArray.shift());\n    console.log(timerArray.length);\n    console.log('aiueo');\n    console.log(timer); //なぜかnullが入っている\n\n    count = 10;\n    console.log(count);\n    timerArray.push(setInterval(() => {\n      count--;\n      setTimer(count);\n      console.log(count, timer);\n\n      if (count === 0) {\n        clearInterval(timerArray.shift());\n        const reset = setTimeout(() => {\n          //1秒後に時間切れでリセット\n          setTimer(10);\n          console.log('aaa');\n          console.log('timer:' + timer);\n          setState({\n            cardSet: cardSet,\n            answer: answerf(cardSet),\n            userChoice: [null, null],\n            floor: 1\n          });\n          setOpen(true);\n          setTimeout(setOpen, 1000, false);\n        }, 1000);\n      } // if(count === 10) {\n      //   clearInterval(interval);\n      // }\n      // if(open === true) {\n      //   clearInterval(interval);\n      // }\n\n    }, 1000)); // clearInterval(interval);\n  };\n\n  useEffect( //floorを参照して変更があったときに正解不正解を識別\n  () => {\n    if (state.floor == 1) {\n      setJudge(false);\n    } else {\n      setJudge(true);\n    } // else if (open === true) {\n    //   // timerf();\n    // }\n\n  }, [state.floor]);\n  useEffect( //timer\n  () => {\n    if (timer === 10) {\n      timerf();\n    }\n  }, [timer]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      state,\n      setState,\n      open,\n      setOpen,\n      judge,\n      timer,\n      setTimer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/saito/Documents/GitHub/react-game/src/components/App.js"],"names":["React","useState","useEffect","Game","Info","Popup","AppContext","cardSetf","answerf","App","cardSet","initialState","answer","userChoice","floor","state","setState","judge","setJudge","open","setOpen","timer","setTimer","timerArray","Array","count","timerf","clearInterval","shift","console","log","length","push","setInterval","reset","setTimeout"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nimport '../css/reset.css';\nimport '../css/index.css';\n\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\n\n// ========================================\n\nconst App = () => {\n  var cardSet = cardSetf();// TODO: カードを推すたびに呼び出されちゃってる\n  const initialState = {\n    cardSet:cardSet,//cardの並び\n    answer:answerf(cardSet),//答えの組合せ\n    userChoice:[null,null],//userの選択\n    floor:1\n  }\nconst [state,setState] = useState(initialState);\nconst [judge,setJudge] = useState(false);//正解か不正解状態\nconst [open,setOpen] = useState(false);//表示、非表示\nconst [timer,setTimer] = useState(10);\n\nvar timerArray = new Array();\n// var interval;\nlet count;\nconst timerf = () => {\n  clearInterval(timerArray .shift());\n  console.log(timerArray.length);\n  console.log('aiueo');\n  console.log(timer);//なぜかnullが入っている\n    count = 10;\n    console.log(count);\n  timerArray.push(setInterval(() => {\n    count--;\n    setTimer(count);\n    console.log(count,timer);\n    if(count === 0) {\n      clearInterval(timerArray .shift());\n      const reset = setTimeout(() => {//1秒後に時間切れでリセット\n        setTimer(10);\n        console.log('aaa');\n        console.log('timer:'+timer);\n        setState({\n          cardSet:cardSet,\n          answer:answerf(cardSet),\n          userChoice:[null,null],\n          floor:1\n        });\n        setOpen(true);\n        setTimeout(setOpen,1000,false);\n      }, 1000);\n    }\n    // if(count === 10) {\n    //   clearInterval(interval);\n    // }\n    // if(open === true) {\n    //   clearInterval(interval);\n    // }\n  }, 1000));\n    // clearInterval(interval);\n}\n  useEffect(//floorを参照して変更があったときに正解不正解を識別\n    () => {\n      if(state.floor == 1){\n        setJudge(false);\n      }\n      else{\n        setJudge(true);\n      }\n      // else if (open === true) {\n      //   // timerf();\n      // }\n    },\n    [state.floor]\n  );\n\n  useEffect(//timer\n    () => {\n      if(timer === 10){\n        timerf();\n      }\n    },[timer]\n  );\n\n  return(\n    <AppContext.Provider value={{state,setState,open,setOpen,judge,timer,setTimer}}>\n    <div className=\"game\">\n      <div className=\"inner\">\n        <Game />\n        <Info />\n        <Popup />\n      </div>\n    </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}