{"version":3,"sources":["components/Header.js","contexts/AppContext.js","function/combine.js","components/Card.js","components/Game.js","components/Timer.js","function/cardSet.js","function/answer.js","components/Info.js","components/Popup.js","components/Start.js","components/Result.js","components/App.js","index.js"],"names":["Header","className","AppContext","createContext","combine","imgNum","num","cards","length","com","r","s","t","Card","useContext","state","setState","start","imgurl01","imgurl02","userChoice","onClick","first","second","cardSet","answer","floor","src","alt","Game","map","index","key","Timer","timer","cardSetf","arr30","a","j","Math","random","cardcopy","k","push","answerf","choice","Info","setOpen","setTimer","setStart","setResult","disabled","clearInterval","timerArray","shift","setTimeout","Popup","open","judge","Start","href","target","rel","Result","paragraph","result","Array","App","count","initialState","useState","setJudge","useEffect","console","log","Promise","resolve","setInterval","then","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.015e4427.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return(\n    <header>\n      <div className=\"inner\">\n        <h1>Animal game!</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import {createContext} from 'react';\n\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","export const combine = (imgNum,num) => {\n  // var cards02 = ['01a','01b','02a','02b','03a','03b'];\n  var cards = ['05a','05b','06a','06b','07a','07b'];\n\n  const length = cards.length;\n\n  var com = [30];\n  for(var r=0;r<30;r++){\n    com[r] = [2];//配列に配列を入れて2次元配列を作成\n  }\n  r=0;\n  for(var s=0;s<length;s++){//rは0~14で動く\n    for(var t=s+1;t<length;t++){\n      com[r][0] = cards[s];\n      com[r][1] = cards[t];\n      r++;\n    }\n  }\n  for(r=0;r<15;r++){//反転\n    com[r+15][0] = com[r][1]\n    com[r+15][1] = com[r][0]\n  }\n  // console.log(com[10][1]);\n\n  return './img/animal'+com[imgNum][num]+'.png';\n}\n","import React,{useContext} from 'react';\n\nimport AppContext from '../contexts/AppContext';\n\nimport {combine} from '../function/combine';\n\n// ========================================\n\n\nconst Card = ({imgNum,num}) => {\n\n  const {state,setState,start} = useContext(AppContext);\n\n  var imgurl01 = combine(imgNum,0);\n  var imgurl02 = combine(imgNum,1);\n\nconst handleClickUserChoice = () => {\n  if(start === 1){\n    let first = state.userChoice[0];\n    let second = state.userChoice[1];\n\n    if(first === num){\n      setState({\n        cardSet:state.cardSet,\n        answer:state.answer,\n        userChoice:[second,null],\n        floor:state.floor\n      });\n    }\n    else {//被らないように\n      setState({\n        cardSet:state.cardSet,\n        answer:state.answer,\n        userChoice:[num,first],\n        floor:state.floor\n      });\n      // console.log(first);\n      // console.log(second);\n    }\n    if(second === num){\n      setState({\n        cardSet:state.cardSet,\n        answer:state.answer,\n        userChoice:[first,null],\n        floor:state.floor\n      });\n    }\n  }\n}\n\n  return(\n    <div className={'card' + (state.userChoice[0] === num || state.userChoice[1] === num ? ' active' : '')} onClick={handleClickUserChoice}>\n      <div className=\"card-num\">{num+1}</div>\n      <div className=\"animal-set\">\n        <p className=\"animal\">\n          <img src={imgurl01} alt=\"動物\" />\n        </p>\n        <p className=\"animal\">\n          <img src={imgurl02} alt=\"動物\" />\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React,{useContext} from 'react';\n\nimport Card from './Card';\n\nimport AppContext from '../contexts/AppContext';\n\n// ========================================\n\nconst Game = () => {\n\n  const {state} = useContext(AppContext);\n\n  // handleClick(i){\n  //   var userAns = this.state.userAns;\n  //   userAns[0] = userAns[1];\n  //   userAns[1] = i+1;\n  //  this.setState({\n  //    userAns:userAns,\n  //  });\n  // }\n\n  return(\n    <div className=\"game-board\">\n    {state.cardSet.map((imgNum,index)=>(<Card key={index} num={index} imgNum={imgNum} />))}\n    </div>\n  );\n}\n\nexport default Game;\n","import React,{useContext} from 'react';\n\nimport AppContext from '../contexts/AppContext';\n\n\n// ================================\n\n\nconst Timer = () => {\n  const {timer} = useContext(AppContext);\n\n  return(\n    <div className=\"timer-area\">\n      {timer}\n    </div>\n  );\n}\n\n\nexport default Timer;\n"," export const cardSetf = () => {\n   //30個の数から1つのみ重複するという条件で10個の配列を取り出す関数\n  var arr30 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29];// TODO: もっと簡潔に\n  // console.log(arr30);\n\n  //シャッフルアルゴリズム\n  var a = arr30.length;\n  while (a) {\n    var j = Math.floor( Math.random() * a );\n    var t = arr30[--a];\n    arr30[a] = arr30[j];\n    arr30[j] = t;\n  }\n  // console.log(arr30);\n\n  //先頭9個の数をcardcopyに入れる\n    var cardcopy = [9];\n    var k = 0;\n  while(k<9){\n    cardcopy[k] = arr30[k];\n    k++;\n  }\n  //ランダムで一個追加(最初のを最後に付け足している)\n  cardcopy.push(cardcopy[0]);\n  //シャッフルアルゴリズム\n  a = cardcopy.length;\n  while (a) {\n     j = Math.floor( Math.random() * a );\n     t = cardcopy[--a];\n    cardcopy[a] = cardcopy[j];\n    cardcopy[j] = t;\n  }\n\n  // console.log(cardcopy);\n  return cardcopy;\n}\n","export const answerf = (choice) => {\n  //答えの組み合わせを返す関数\n  var answer =[2];\n  for(var s=0;s<10;s++){\n    for(var t=s+1;t<10;t++){\n      if(choice[s] === choice[t]){\n        answer[0] = s;\n        answer[1] = t;\n        return answer;\n      }\n    }\n  }\n}\n","import React,{useContext} from 'react';\n\nimport Timer from './Timer';\n\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\nimport {timerArray} from './App';\n// ========================================\n\nconst Info = () => {\n\n  const {state,setState,setOpen,setTimer,setStart,setResult} = useContext(AppContext);\n\n  const handleClickAnswer = () => {\n    setOpen(true);\n    clearInterval(timerArray.shift());\n    setTimer(20);\n    setTimeout(setOpen,1000,false);\n    var cardSet = cardSetf();\n    if(state.answer[0]+state.answer[1] === state.userChoice[0]+state.userChoice[1] && state.answer[0]*state.answer[1] === state.userChoice[0]*state.userChoice[1]){//正解したとき\n      setState({\n        cardSet:cardSet,\n        answer:answerf(cardSet),\n        userChoice:[null,null],\n        floor:state.floor+1\n      });\n    }\n    else{//不正解のとき\n      setStart(2);\n      setResult(state.floor);\n      setState({\n        cardSet:cardSet,\n        answer:answerf(cardSet),\n        userChoice:[null,null],\n        floor:1\n      });\n    }\n  }\n  return(\n    <div className=\"game-info\">\n   {/*<div className=\"answer\">\n        <p className=\"answer_head\">答えはこちら</p>\n        <p><span className=\"ans_num\">{state.answer[0]+1}</span>と<span className=\"ans_num\">{state.answer[1]+1}</span>\n        </p>\n      </div>*/}\n      <Timer />\n      <div className=\"submit-area\">\n        <button className={state.userChoice[0] === null || state.userChoice[1] === null ? 'disabled' : 'active' } disabled={state.userChoice[0] === null || state.userChoice[1] === null} onClick={handleClickAnswer}>決定</button>\n      </div>\n      <div className=\"floor-area\">\n        <p>{state.floor}階層</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Info;\n","import React,{useContext} from 'react';\n\nimport AppContext from '../contexts/AppContext';\n\n// =============================\n\nconst Popup = () => {\n\n  const {open,judge} = useContext(AppContext);\n\n  return (\n    <div className={'popup' + (open === true ? ' active' : '')}>\n      <p className={judge === true ? 'correct' : ''}>{judge === true ? '正解' : '不正解' }</p>\n    </div>\n  );\n}\n\nexport default Popup;\n","import React,{useContext} from 'react';\nimport AppContext from '../contexts/AppContext';\n\n// =====================================\n\nconst Start = () => {\n  const {start,setStart} = useContext(AppContext);\n\n  const handleClickStart = () => {\n    setStart(1);\n  }\n\n  return(\n    <div className={'start-modal' + (start === 0 ? '' : ' none')}>\n      <p className=\"title\">Animal game!</p>\n      <div className=\"content\">\n        <p>このサイトは、<a className=\"twitter-link\" href=\"https://twitter.com/roxasBazooka\" target=\"_blank\" rel=\"noopener noreferrer\">saito</a>がReactの学習兼ポートフォリオとして作成したゲームです。</p>\n        <p className=\"head\">ルール説明</p>\n        <ol>\n          <li>10枚のカードが並んでいます。1組(2枚)だけ同じ動物の組み合わせのカードがあるので選択してください。</li>\n          <li>2枚のカードを選択したら、下に決定ボタンがあるので押してください。</li>\n          <li>正解すると次の階層に進みます。つまり、どれだけ奥の階層に進めるかを競うゲームです。</li>\n          <li>サイト内で秒数がカウントダウンされていますが、それが一階層毎の制限時間です。</li>\n          <li>制限時間切れ、もしくは決定ボタンを押して不正解になった場合にゲームが終了します。</li>\n        </ol>\n      </div>\n      <a className=\"button\" onClick={handleClickStart}>START</a>\n    </div>\n  );\n}\n\nexport default Start;\n","import React,{useContext} from 'react';\nimport AppContext from '../contexts/AppContext';\n\n// =====================================\n\nconst Result = () => {\n  const {start,setStart,result} = useContext(AppContext);\n\n  const handleClickRule = () => {\n    setStart(0);\n  }\n  const handleClickStart = () => {\n    setStart(1);\n  }\n\n  var paragraph;\n  if(result === 1) {\n    paragraph = \"次は頑張ろうね！\";\n  }\n  else if(result <= 3) {\n    paragraph = \"もっと頑張って！\";\n  }\n  else if(result <= 5) {\n    paragraph = \"まだまだいけるよ！\";\n  }\n  else if(result <=10) {\n    paragraph = \"やりますね〜！\";\n  }\n  else if(result <=20) {\n    paragraph = \"結構すごいよ！\";\n  }\n  else if(result <= 30) {\n    paragraph = \"どうしたの？こんなところで終わりかい？\";\n  }\n  else if(result <= 50) {\n    paragraph = \"よく頑張ったね（笑）\";\n  }\n  else if(result <= 100) {\n    paragraph = \"遊んでくれてありがとう。\";\n  }\n  else{\n    paragraph = \"あなたは神だ！！！\";\n  }\n\n// reroadした時にresultがでないように\n  return(\n    <div className={'start-modal' + (start === 2 ? '' : ' none') + (result === 0 ? ' hidden' : '')}>\n      <p className=\"title\">Animal game!</p>\n      <div className=\"content\">\n        <p className=\"head\">Result</p>\n        <p>{result + '階層まで進めました！'}</p>\n        <p>{paragraph}</p>\n      </div>\n      <a className=\"button rule\" onClick={handleClickRule}>Rule</a>\n      <a className=\"button\" onClick={handleClickStart}>Try again</a>\n    </div>\n  );\n}\n\nexport default Result;\n","import React,{useState,useEffect} from 'react';\n\nimport '../css/reset.css';\nimport '../css/index.css';\n\nimport Header from './Header';\nimport Game from './Game';\nimport Info from './Info';\nimport Popup from './Popup';\nimport Start from './Start';\nimport Result from './Result';\nimport AppContext from '../contexts/AppContext';\n\nimport {cardSetf} from '../function/cardSet';\nimport {answerf} from '../function/answer';\n\n// ========================================\n\nexport var timerArray = new Array();//外に出すことによってstateを即時反映できる\n\nconst App = () => {\n  var cardSet = cardSetf();// TODO: カードを推すたびに呼び出されちゃってる\n  const initialState = {\n    cardSet:cardSet,//cardの並び\n    answer:answerf(cardSet),//答えの組合せ\n    userChoice:[null,null],//userの選択\n    floor:1\n  }\nconst [state,setState] = useState(initialState);\nconst [judge,setJudge] = useState(false);//正解か不正解状態\nconst [open,setOpen] = useState(false);//表示、非表示\nconst [timer,setTimer] = useState(20);\nconst [start,setStart] = useState(0);//0の時start-modal表示、1の時ゲーム中、2の時result画面表示\nconst [result,setResult] = useState(0);\n\nlet count;\nconst timerf = () => {\n  console.log('配列数:'+timerArray.length);\n  console.log('timer'+timer);\n  count = timer;\n  const promise = new Promise((resolve) => {\n    timerArray.push(setInterval(() => {\n      console.log('配列数:'+timerArray.length);\n      count--;\n      setTimer(count);\n      console.log(count,timer);\n      if(count === 0) {\n        resolve();\n        console.log('配列数:'+timerArray.length);\n          setStart(2);\n          setTimer(20);\n          setResult(state.floor);\n          console.log('timer:'+timer);\n          setState({\n            cardSet:cardSet,\n            answer:answerf(cardSet),\n            userChoice:[null,null],\n            floor:1\n          });\n          setOpen(true);\n          setTimeout(setOpen,1000,false);\n      }\n    }, 1000));\n  });\n  promise.then(() => {\n    console.log('clear');\n    //タイマーを止める\n    clearInterval(timerArray.shift());\n  });\n}\n  useEffect(//floorを参照して変更があったときに正解不正解を識別\n    () => {\n      if(state.floor === 1){\n        setJudge(false);\n      }\n      else{\n        setJudge(true);\n      }\n    },\n    [state.floor]\n  );\n\n  useEffect(//timer\n    () => {\n      if(start === 1) {\n        if(timer === 20){\n          console.log('timerf:'+timer);\n          timerf();\n        }\n      }\n    },[timer,start]\n  );\n\n  return(\n    <AppContext.Provider value={{state,setState,open,setOpen,judge,timer,setTimer,start,setStart,result,setResult}}>\n    <Start />\n    <Result />\n    <Header />\n    <div className=\"game\">\n      <div className=\"inner\">\n        <Game />\n        <Info />\n        <Popup />\n      </div>\n    </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}